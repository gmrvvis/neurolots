#version 400
layout(triangles) in;

in vec3 tcPosition[];
in vec3 tcCenter[];
in vec3 tcNormal[];
in vec3 tcColor[];
in float tcRadius[];

out vec3 position;
out vec3 normal;
out vec3 vColor;
out vec3 L;

uniform mat4 proy;

void main( )
{
  vec3 tePosition;
  vec3 teCenter;
  float teRadius;
  float u=gl_TessCoord.x;
  float v=gl_TessCoord.y;
  float w=gl_TessCoord.z;
  normal = normalize(tcNormal[0]*u+tcNormal[1]*v+tcNormal[2]*w);
  teCenter = tcCenter[0]*u+tcCenter[1]*v+tcCenter[2]*w;
  vColor = tcColor[0]*u+tcColor[1]*v+tcColor[2]*w;
  // teRadius = tcRadius[0]*u+tcRadius[1]*v+tcRadius[2]*w;

  float radius0 = length( tcPosition[0] - tcCenter[0] );
  float radius1 = length( tcPosition[1] - tcCenter[1] );
  float radius2 = length( tcPosition[2] - tcCenter[2] );
  teRadius = radius0*u+radius1*v+radius2*w;

  tePosition = teCenter+normal*teRadius;
  // tePosition = tcPosition[0]*u+tcPosition[1]*v+tcPosition[2]*w;
  L = normalize(-tePosition);
  position = tePosition;
  gl_Position = proy*vec4(tePosition,1);
}
